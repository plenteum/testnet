sudo: false
language: cpp
cache:
 ccache: true
 directories:
    - /home/travis/toolchain

matrix:
  include:

  # Ubuntu, g++-8
  - os: linux
    dist: trusty
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
          - libboost1.55-all-dev
          - libssl-dev
          - g++-8
          - gcc-8
    env:
    - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    - LABEL="linux"
    - _DEPLOYABLE="true"
    - STRIP="strip"

  # Ubuntu, g++-7
  - os: linux
    dist: trusty
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
          - libboost1.55-all-dev
          - libssl-dev
          - g++-7
          - gcc-7
    env:
    - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - LABEL="linux-g++-7"
    - STRIP="strip"

  # Ubuntu, clang-6
  - os: linux
    dist: trusty
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-6.0
        packages:
          - libboost1.55-all-dev
          - libssl-dev
          - clang-6.0
          - libstdc++-7-dev
    env:
    - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
    - LABEL="linux-clang-6"
    - STRIP="strip"

  # OSX, clang
  - os: osx
    osx_image: xcode10
    compiler: clang
    env:
    - MATRIX_EVAL="CC=/usr/local/opt/llvm/bin/clang && CXX=/usr/local/opt/llvm/bin/clang++"
    - LABEL="osx"
    - _DEPLOYABLE="true"
    - STRIP="strip"

  # Arm (aarch64) cross compile
  - os: linux
    env:
    - MATRIX_EVAL="CC=aarch64-linux-gnu-gcc && CXX=aarch64-linux-gnu-g++"
    - LABEL="aarch64"
    - _DEPLOYABLE="true"
    - STRIP="aarch64-linux-gnu-strip"

before_install:
- eval $MATRIX_EVAL

install:
# Need to uninstall oclint to get newer gcc installed https://github.com/travis-ci/travis-ci/issues/8826
- if [[ "${LABEL:0:3}" == "osx" ]]; then brew cask uninstall --force oclint || true ; fi

# Need a newer version of llvm to link against to get std::filesystem / std::experimental::filesystem
- if [[ "${LABEL:0:3}" == "osx" ]]; then travis_retry brew install llvm || travis_retry brew upgrade llvm ; fi

# Need to make sure that we have openssl installed
- if [[ "${LABEL:0:3}" == "osx" ]]; then travis_retry brew install openssl || travis_retry brew upgrade openssl ; fi
- if [[ "${LABEL:0:3}" == "osx" ]]; then brew link --force openssl ; fi
- if [[ "${LABEL:0:3}" == "osx" ]]; then ln -s /usr/local/opt/openssl/include/openssl /usr/local/include ; fi

# Neeed to install ccache
- if [[ "${LABEL:0:3}" == "osx" ]]; then travis_retry brew install ccache ; fi
- if [[ "${LABEL:0:3}" == "osx" ]]; then export PATH="/usr/local/opt/ccache/libexec:$PATH" ; fi

script:
- eval $MATRIX_EVAL
# If we're cross compiling aarch64, make sure our build enivornment is setup
# we do this in the script stage because this happens after the repo is cloned
- if [[ "$LABEL" == "aarch64" ]]; then source scripts/prep-aarch64.sh ; fi
- mkdir build && cd build
- cmake -DARCH=default -DCMAKE_BUILD_TYPE=Release -DSTATIC=true ..
- make -j2
- if [[ "$LABEL" != "aarch64" ]]; then ./src/cryptotest ; fi

before_deploy:
- if [[ "${TRAVIS_TAG}" == "" ]]; then export TRAVIS_TAG=${TRAVIS_COMMIT} ; fi
- cd src
- TARGETS="Plenteumd miner zedwallet wallet-service zedwallet-beta cryptotest wallet-api"
- ${STRIP} ${TARGETS}
- rm -rf plenteum-testnet-${TRAVIS_TAG}
- mkdir plenteum-testnet-${TRAVIS_TAG}
- cp ${TARGETS} plenteum-testnet-${TRAVIS_TAG}/
- cp ../../LICENSE plenteum-testnet-${TRAVIS_TAG}/
- tar cvfz plenteum-testnet-${TRAVIS_TAG}-${LABEL}.tar.gz plenteum-testnet-${TRAVIS_TAG}/
- rm -rf builds
- mkdir builds
- cp plenteum-testnet-${TRAVIS_TAG}-${LABEL}.tar.gz builds


deploy:
  - provider: releases
    api_key:
        secure: EQ9ITil3FnjQBQ/3FKUINvsQ0QeoqjPuRHXt/TGzsP7P8Ywx7ETgJgt88LekijjerA19hubapWlKoDFLCy88vdQSckblmjMhhYjOJlzdJt1RejrjmlZhY6k+k1DVPodKrwJCnNk6LDgrY4QG0m6QtVDlvtvP0K9UlunIWR+UN/jLLZVniYlyfCXEyNhYS1GzGe17MOhRcv0UZENik2HBAIj1uSSP6oqiENdQfSlYmGLHlbN0F4rVDcLIFp+pbKQkX8oQNJgwY3LGexNnRgGQogzeFFQDzeqQcHZ1D3Icqksc3/8MZpDKVeKke/vMNPtstsS/Y+I6971D8SpZVFqb410ge0a+lChLlCjjiw1tGRagmA2WDJoBsW1kJBPAQGFJrbgtWJI/KxyvwdUpS0t73I/HrWkE+GgQRkno9OcpXZP0cbbc6Owhhi1/vH8XxgvNTZgS82NsKzspf1nWL73ukuQH+fGbsio5z9jkl+3PCQcq6U/zNJIDVW94u8rBiCUR6wOXFwecUsTXdw3AQ743Jdd0E5LDyqJGdJ1khWJSWIBPO1bmqIoYSRBTiVINYZlJq4Q/dBnPDi32JQYXzCaxPZLEpJRsFErkKLuFVEy3BZo0YgHY8sU1wxrLiF39HM5i4vcMf+pkCME+/uLPCh7kARdDDeONegN35wjWUoOZKRw=
    file:
      - plenteum-testnet-${TRAVIS_TAG}-${LABEL}.tar.gz
    skip_cleanup: true
    on:
      repo: plenteum/testnet
      tags: true
      draft: true
      condition: "$_DEPLOYABLE = true"
    
  - provider: s3
    access_key_id:
      secure: L4j7EQEyo/E5XBrQ0JYkBLRc++AAkDTrkJ5DCxR3PgDy0wKQcANsDQTU89PGhs81ZCdJ95n+z/IclOReSP7ZBnEd6tYQAZY/9jmpx7Gt4VoStVKjfMvQW+lOoVmRnWM//pqKQcfs8Sr3QISCzwZ59kfgzOB39mgmscAyoTtt5wRRVxDpChcMuuShESe8jPppzVoJH00Q/dg4m8JDOV0xFBy9ll/Og5WmKEejJFk3nDvr7PZIYtHzy0DTWUg7yIckFDm49L7+u/70gY8EGuuvhl46iLOyVLLLI+G0MqkOEX+yxW4IdMk01ovltZo04nOCcLp48bfScU33zSoCWxgonOcyx2zMpma2O1A00QfwZk5UbzhA4c/Hot3/Oq0qXtaLnQjrHip4gGgPdaVwVy8t5TPpevJPgCMnB0pYUJDcP6thD6zGKEQQEjDf7AWOOfRJfo9zUtK7XkdJ9nB6BdlECYpovGJeK9AhuDS95Yg5vvLEntth82hSnaEwph+J16NcqdjPg7vPe6hwoB938n0tu8w9ua0eOPfF/eIvojRKbiijACjx3OOomwGTXFFFXhbeFQeFF5X4FtnMHr6V1j3Jx4kDqSDemUFU68OY476G3tnyN9Mhl/fYDBF2VQWMbkGGK+vrHvOGBQhkvfrXGWxqZZxA1zwF7y7lV5elWep0mLA=
    secret_access_key:
      secure: dsGu3lAzBLQ6wZ4ZaqZfxTES9kNjAzCvQBQeXGzY4DW6MDBdnN8EhQAYEqyZlH2OIK4M8Q3Sj0LLTGKrPsuH5wlMvNQU+67OWGeVM9YR93hoJwxu6NkYiItg/MekjworfQ2NmjGwUctKwVS9+2+vQFzjGpjOtynkgXIPV3fa1bweUacBamb+IrlNnb9xg1sVwa7wKDFuDKZdAlZ0tfyg4yc8ACWnR5vmRsii9aN1lQUYTIqH19+6zIIoUW7U0/H2r61/mVSW6MFK5vzVIGJYCdQUwdHDJQV5nl39TUT+2BI799/wPfsbfjUBgjWIGGQfnzbeHm32NvINmdwMn30TsH5hvtmIc1AFA8SDsbMpIEUl1SFsDoTWMI654YxNO9bZAcyX8eVMXAE6MPN59CWjadmV7nnZ8Ezcp7XsPFc5qNvHJ5MOICXk1YLpVzUx5NufdHy2JbijQ6fQXH5KkYBEHzfTBD57r4Q0oU3Jddgx0tOQsbxzP9JTqNPUz35XOe4l7hZsiXeJa461wR45gMHEoSJtY47zW0SI2LFCUTw8Bf15oHXnuFzbqvR8DFD4DVqXGBCSXoHJ+5cs29xLt5ZCg896qGGuCBGfmfD1/wXOr19RNp2V/7qMYNcb0uolpMleHudmvSpYGnWnYAPi1T0+QToPlV1o5qvbmgvdswj0XoQ=
    bucket: plenteum-artifacts
    skip_cleanup: true
    acl: public_read
    region: us-east-2
    upload-dir: plenteum-testnet
    local-dir: builds
    on:
      repo: plenteum/testnet
      all_branches: true